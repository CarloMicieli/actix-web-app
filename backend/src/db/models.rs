// Generated by diesel_ext

#![allow(unused)]
#![allow(clippy::all)]

use crate::db::schema::*;

use bigdecimal::BigDecimal;
use chrono::NaiveDateTime;
use uuid::Uuid;

#[derive(Queryable, Debug, Identifiable)]
#[primary_key(brand_id)]
pub struct Brand {
    pub brand_id: Uuid,
    pub name: String,
    pub slug: String,
    pub brand_logo_id: Option<Uuid>,
    pub company_name: Option<String>,
    pub group_name: Option<String>,
    pub description: Option<String>,
    pub email: Option<String>,
    pub website_url: Option<String>,
    pub kind: String,
    pub address_line1: Option<String>,
    pub address_line2: Option<String>,
    pub address_city: Option<String>,
    pub address_region: Option<String>,
    pub address_postal_code: Option<String>,
    pub address_country: Option<String>,
    pub created: NaiveDateTime,
    pub last_modified: Option<NaiveDateTime>,
    pub version: i32,
}

#[derive(Queryable, Debug, Identifiable)]
#[primary_key(catalog_item_id)]
pub struct CatalogItem {
    pub catalog_item_id: Uuid,
    pub brand_id: Uuid,
    pub scale_id: Uuid,
    pub item_number: String,
    pub slug: String,
    pub power_method: String,
    pub delivery_date: Option<String>,
    pub available: Option<bool>,
    pub description: String,
    pub model_description: Option<String>,
    pub prototype_description: Option<String>,
    pub created: NaiveDateTime,
    pub last_modified: Option<NaiveDateTime>,
    pub version: i32,
}

#[derive(Queryable, Debug, Identifiable)]
#[primary_key(catalog_item_id, image_id)]
pub struct CatalogItemsImage {
    pub catalog_item_id: Uuid,
    pub image_id: Uuid,
    pub is_default: Option<bool>,
}

#[derive(Queryable, Debug, Identifiable)]
#[primary_key(collection_item_id)]
pub struct CollectionItem {
    pub collection_item_id: Uuid,
    pub collection_id: Uuid,
    pub catalog_item_id: Uuid,
    pub condition: String,
    pub price: BigDecimal,
    pub currency: String,
    pub purchased_at: Option<Uuid>,
    pub added_date: NaiveDateTime,
    pub removed_date: Option<NaiveDateTime>,
    pub notes: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
#[primary_key(collection_id)]
pub struct Collection {
    pub collection_id: Uuid,
    pub owner: String,
    pub notes: Option<String>,
    pub created: NaiveDateTime,
    pub last_modified: Option<NaiveDateTime>,
    pub version: i32,
}

#[derive(Queryable, Debug, Identifiable)]
#[primary_key(shop_id, owner)]
pub struct FavouriteShop {
    pub shop_id: Uuid,
    pub owner: String,
}

#[derive(Queryable, Debug, Identifiable)]
#[primary_key(image_id)]
pub struct Image {
    pub image_id: Uuid,
    pub content_type: String,
    pub content: Vec<u8>,
    pub is_deleted: Option<bool>,
    pub created: NaiveDateTime,
}

#[derive(Queryable, Debug, Identifiable)]
#[primary_key(railway_id)]
pub struct Railway {
    pub railway_id: Uuid,
    pub name: String,
    pub company_name: Option<String>,
    pub slug: String,
    pub railway_logo_id: Option<Uuid>,
    pub country: Option<String>,
    pub operating_since: Option<NaiveDateTime>,
    pub operating_until: Option<NaiveDateTime>,
    pub active: Option<bool>,
    pub gauge_mm: Option<BigDecimal>,
    pub gauge_in: Option<BigDecimal>,
    pub track_type: Option<String>,
    pub headquarters: Option<String>,
    pub total_length_mi: Option<BigDecimal>,
    pub total_length_km: Option<BigDecimal>,
    pub website_url: Option<String>,
    pub created: NaiveDateTime,
    pub last_modified: Option<NaiveDateTime>,
    pub version: i32,
}

#[derive(Queryable, Debug, Identifiable)]
#[primary_key(rolling_stock_id)]
pub struct RollingStock {
    pub rolling_stock_id: Uuid,
    pub catalog_item_id: Uuid,
    pub railway_id: Uuid,
    pub category: String,
    pub epoch: String,
    pub min_radius: Option<BigDecimal>,
    pub couplers: Option<String>,
    pub livery: Option<String>,
    pub length_mm: Option<BigDecimal>,
    pub length_in: Option<BigDecimal>,
    pub type_name: Option<String>,
    pub class_name: Option<String>,
    pub road_number: Option<String>,
    pub series: Option<String>,
    pub depot: Option<String>,
    pub dcc_interface: Option<String>,
    pub control: Option<String>,
    pub passenger_car_type: Option<String>,
    pub service_level: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
#[primary_key(scale_id)]
pub struct Scale {
    pub scale_id: Uuid,
    pub name: String,
    pub slug: String,
    pub ratio: BigDecimal,
    pub gauge_mm: Option<BigDecimal>,
    pub gauge_in: Option<BigDecimal>,
    pub track_type: String,
    pub description: Option<String>,
    pub standards: Option<String>,
    pub weight: Option<i32>,
    pub created: NaiveDateTime,
    pub last_modified: Option<NaiveDateTime>,
    pub version: i32,
}

#[derive(Queryable, Debug, Identifiable)]
#[primary_key(shop_id)]
pub struct Shop {
    pub shop_id: Uuid,
    pub name: String,
    pub slug: String,
    pub website_url: Option<String>,
    pub phone_number: Option<String>,
    pub email: Option<String>,
    pub address_line1: Option<String>,
    pub address_line2: Option<String>,
    pub address_city: Option<String>,
    pub address_region: Option<String>,
    pub address_postal_code: Option<String>,
    pub address_country: Option<String>,
    pub created: NaiveDateTime,
    pub last_modified: Option<NaiveDateTime>,
    pub version: i32,
}

#[derive(Queryable, Debug, Identifiable)]
#[primary_key(user_id)]
pub struct User {
    pub user_id: String,
    pub username: String,
    pub email: String,
    pub password: String,
    pub login_session: String,
    pub gravatar_hash: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
#[primary_key(wishlist_item_id)]
pub struct WishlistItem {
    pub wishlist_item_id: Uuid,
    pub wishlist_id: Uuid,
    pub catalog_item_id: Uuid,
    pub priority: String,
    pub added_date: NaiveDateTime,
    pub removed_date: Option<NaiveDateTime>,
    pub price: Option<BigDecimal>,
    pub currency: Option<String>,
    pub notes: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
#[primary_key(wishlist_id)]
#[table_name = "wishlists"]
pub struct Wishlist {
    pub wishlist_id: Uuid,
    pub owner: String,
    pub slug: String,
    pub wishlist_name: Option<String>,
    pub visibility: String,
    pub budget: Option<BigDecimal>,
    pub currency: Option<String>,
    pub created: NaiveDateTime,
    pub last_modified: Option<NaiveDateTime>,
    pub version: i32,
}
